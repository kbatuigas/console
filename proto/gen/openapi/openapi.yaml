components:
  schemas:
    ACL.Operation:
      enum:
        - OPERATION_ANY
        - OPERATION_ALL
        - OPERATION_READ
        - OPERATION_WRITE
        - OPERATION_CREATE
        - OPERATION_DELETE
        - OPERATION_ALTER
        - OPERATION_DESCRIBE
        - OPERATION_CLUSTER_ACTION
        - OPERATION_DESCRIBE_CONFIGS
        - OPERATION_ALTER_CONFIGS
        - OPERATION_IDEMPOTENT_WRITE
        - OPERATION_CREATE_TOKENS
        - OPERATION_DESCRIBE_TOKENS
      type: string
    BadRequest:
      description: |-
        Describes violations in a client request. This error type focuses on the
        syntactic aspects of the request.
      properties:
        field_violations:
          description: Describes all violations in a client request.
          items:
            $ref: '#/components/schemas/FieldViolation'
          type: array
      title: BadRequest
      type: object
    Config:
      properties:
        name:
          description: Name is a topic level config key (e.g. segment.bytes).
          type: string
        value:
          nullable: true
          title: Value is a topic level config value (e.g. 1073741824)
          type: string
      type: object
    ConfigSource:
      enum:
        - CONFIG_SOURCE_DYNAMIC_TOPIC_CONFIG
        - CONFIG_SOURCE_DYNAMIC_BROKER_CONFIG
        - CONFIG_SOURCE_DYNAMIC_DEFAULT_BROKER_CONFIG
        - CONFIG_SOURCE_STATIC_BROKER_CONFIG
        - CONFIG_SOURCE_DEFAULT_CONFIG
        - CONFIG_SOURCE_DYNAMIC_BROKER_LOGGER_CONFIG
      type: string
    ConfigSynonym:
      properties:
        name:
          type: string
        source:
          $ref: '#/components/schemas/ConfigSource'
        value:
          nullable: true
          type: string
      type: object
    ConfigType:
      enum:
        - CONFIG_TYPE_BOOLEAN
        - CONFIG_TYPE_STRING
        - CONFIG_TYPE_INT
        - CONFIG_TYPE_SHORT
        - CONFIG_TYPE_LONG
        - CONFIG_TYPE_DOUBLE
        - CONFIG_TYPE_LIST
        - CONFIG_TYPE_CLASS
        - CONFIG_TYPE_PASSWORD
      type: string
    Configuration:
      properties:
        config_synonyms:
          items:
            $ref: '#/components/schemas/ConfigSynonym'
          type: array
        documentation:
          nullable: true
          type: string
        is_read_only:
          type: boolean
        is_sensitive:
          type: boolean
        name:
          type: string
        source:
          $ref: '#/components/schemas/ConfigSource'
        type:
          $ref: '#/components/schemas/ConfigType'
        value:
          nullable: true
          type: string
      type: object
    ConnectCluster:
      properties:
        address:
          type: string
        info:
          $ref: '#/components/schemas/ConnectCluster.Info'
        name:
          type: string
        plugins:
          items:
            $ref: '#/components/schemas/ConnectorPlugin'
          type: array
      type: object
    ConnectCluster.Info:
      properties:
        commit:
          type: string
        kafka_cluster_id:
          type: string
        version:
          type: string
      type: object
    Connector:
      properties:
        state:
          type: string
        worker_id:
          type: string
      type: object
    ConnectorError:
      properties:
        content:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/ConnectorError.Type'
      title: |-
        ConnectorError is the error of a connector, this is holistic error
        abstraction, made parsing the error trace of connector or Task
      type: object
    ConnectorError.Type:
      enum:
        - TYPE_ERROR
        - TYPE_WARNING
      type: string
    ConnectorHolisticState:
      description: |-
        - CONNECTOR_HOLISTIC_STATE_PAUSED: PAUSED: The connector/task has been administratively paused.
         - CONNECTOR_HOLISTIC_STATE_RESTARTING: RESTARTING: he connector/task is restarting.
         - CONNECTOR_HOLISTIC_STATE_DESTROYED: DESTROYED: Connector is in destroyed state, regardless of any tasks.
         - CONNECTOR_HOLISTIC_STATE_STOPPED: STOPPED: The connector/task has been stopped.
         - CONNECTOR_HOLISTIC_STATE_UNASSIGNED: The connector/task has not yet been assigned to a worker
        UNASSIGNED: Connector is in unassigned state.
           Or Connector is in running state, and there are unassigned tasks.
         - CONNECTOR_HOLISTIC_STATE_HEALTHY: HEALTHY: Connector is in running state, > 0 tasks, all of them in running state.
         - CONNECTOR_HOLISTIC_STATE_UNHEALTHY: UNHEALTHY: Connector is failed state.
        			Or Connector is in running state but has 0 tasks.
        			Or Connector is in running state, has > 0 tasks, and all tasks are in failed state.
         - CONNECTOR_HOLISTIC_STATE_DEGRADED: DEGRADED: Connector is in running state, has > 0 tasks, but has at least one state in failed state, but not all tasks are failed.
         - CONNECTOR_HOLISTIC_STATE_UNKNOWN: UNKNOWN: The connector/task could no be determined
      enum:
        - CONNECTOR_HOLISTIC_STATE_PAUSED
        - CONNECTOR_HOLISTIC_STATE_RESTARTING
        - CONNECTOR_HOLISTIC_STATE_DESTROYED
        - CONNECTOR_HOLISTIC_STATE_STOPPED
        - CONNECTOR_HOLISTIC_STATE_UNASSIGNED
        - CONNECTOR_HOLISTIC_STATE_HEALTHY
        - CONNECTOR_HOLISTIC_STATE_UNHEALTHY
        - CONNECTOR_HOLISTIC_STATE_DEGRADED
        - CONNECTOR_HOLISTIC_STATE_UNKNOWN
      title: |-
        The following states are possible for a connector or one of its tasks
        implement the state interface described in the Kafka connect API @see
        https://docs.confluent.io/platform/current/connect/monitoring.html#connector-and-task-status
        this includes holistic unified connector status that takes into account not
        just the connector instance state, but also state of all the tasks within the
        connector
      type: string
    ConnectorInfoStatus:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ConnectorError'
          title: Errors is list of parsed connectors' and tasks' errors
          type: array
        holistic_state:
          $ref: '#/components/schemas/ConnectorHolisticState'
        info:
          $ref: '#/components/schemas/ConnectorSpec'
        name:
          title: name is the connector name
          type: string
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      type: object
    ConnectorPlugin:
      properties:
        class:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    ConnectorSpec:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskInfo'
          readOnly: true
          type: array
        type:
          readOnly: true
          type: string
      required:
        - name
        - config
      title: |-
        ConectorInfo is the spec of the connector, as defined in the Kafka connect
        API, it can be used as input of the connector creation or output of the
        connectors
      type: object
    ConnectorStatus:
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        name:
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskStatus'
          type: array
        trace:
          type: string
        type:
          type: string
      type: object
    CreateACLRequest:
      properties:
        host:
          description: |-
            Host is the host address to use for this acl. Each host to allow
            the principal access from must be specified as a new creation.
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: |-
            Principal is the user to apply this acl for. With the Kafka simple
            authorizer, this must begin with "User:".
          type: string
        resource_name:
          description: |-
            ResourceName is the name of the resource this acl entry will be on.
            For requests with resource_type CLUSTER, this will default to the expected
            value "kafka-cluster".
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - resource_type
        - resource_pattern_type
        - principal
        - host
        - operation
        - permission_type
      type: object
    CreateACLResponse:
      type: object
    CreateConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    CreateSecretResponse:
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      title: CreateSecretResponse is the response of CreateSecret
      type: object
    CreateTopicRequest.Topic:
      properties:
        configs:
          description: |-
            Configs is an array of key value config pairs for a topic.
            These correspond to Kafka Topic-Level Configs.
          items:
            $ref: '#/components/schemas/Config'
          type: array
        name:
          description: Name is the topic's name.
          type: string
        partition_count:
          description: |-
            NumPartitions is how many partitions to give a topic. This must
            be null if specifying partitions manually (see ReplicaAssignment)
            or, to use the cluster default partitions.
          format: int32
          nullable: true
          type: integer
        replica_assignment:
          description: |-
            ReplicaAssignment is an array to manually dictate replicas and their
            partitions for a topic. If using this, both ReplicationFactor and
            NumPartitions must be -1.
          items:
            $ref: '#/components/schemas/ReplicaAssignment'
          type: array
        replication_factor:
          description: |-
            ReplicationFactor is how many replicas every partition must have.
            This must be null if specifying partitions manually (see ReplicaAssignment)
            or, to use the cluster default replication factor.
          format: int32
          nullable: true
          type: integer
      type: object
    CreateTopicResponse:
      properties:
        name:
          description: Name is the topic's name.
          type: string
      type: object
    CreateUserRequest.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
        password:
          type: string
      type: object
    CreateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/CreateUserResponse.User'
      type: object
    CreateUserResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
      type: object
    DeleteACLsRequest.Filter:
      properties:
        host:
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          nullable: true
          type: string
        resource_name:
          nullable: true
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - resource_type
        - resource_pattern_type
        - operation
        - permission_type
      type: object
    DeleteACLsResponse:
      properties:
        matching_acls:
          items:
            $ref: '#/components/schemas/MatchingACL'
          type: array
      type: object
    DeleteSecretResponse:
      title: DeleteSecretResponse is the response of DeleteSecret
      type: object
    DeleteTopicResponse:
      type: object
    DeleteTransformResponse:
      type: object
    DeleteUserResponse:
      type: object
    DeployTransformResponse:
      properties:
        transform:
          $ref: '#/components/schemas/TransformMetadata'
      type: object
    ErrorInfo:
      description: |-
        Describes the cause of the error with structured details.

        Example of an error when contacting the "pubsub.googleapis.com" API when it
        is not enabled:

            { "reason": "API_DISABLED"
              "domain": "googleapis.com"
              "metadata": {
                "resource": "projects/123",
                "service": "pubsub.googleapis.com"
              }
            }

        This response indicates that the pubsub.googleapis.com API is not enabled.

        Example of an error that is returned when attempting to create a Spanner
        instance in a region that is out of stock:

            { "reason": "STOCKOUT"
              "domain": "spanner.googleapis.com",
              "metadata": {
                "availableRegions": "us-central1,us-east2"
              }
            }
      properties:
        domain:
          description: |-
            The logical grouping to which the "reason" belongs. The error domain
            is typically the registered service name of the tool or product that
            generates the error. Example: "pubsub.googleapis.com". If the error is
            generated by some common infrastructure, the error domain must be a
            globally unique value that identifies the infrastructure. For Google API
            infrastructure, the error domain is "googleapis.com".
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Additional structured details about this error.

            Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in
            length. When identifying the current value of an exceeded limit, the units
            should be contained in the key, not the value.  For example, rather than
            {"instanceLimit": "100/request"}, should be returned as,
            {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
            instances that can be created in a single (batch) request.
          type: object
        reason:
          description: |-
            The reason of the error. This is a constant value that identifies the
            proximate cause of the error. Error reasons are unique within a particular
            domain of errors. This should be at most 63 characters and match a
            regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents
            UPPER_SNAKE_CASE.
          type: string
      title: ErrorInfo
      type: object
    FieldViolation:
      description: A message type used to describe a single bad request field.
      properties:
        description:
          description: A description of why the request element is bad.
          type: string
        field:
          description: |-
            A path that leads to a field in the request body. The value will be a
            sequence of dot-separated identifiers that identify a protocol buffer
            field.

            Consider the following:

                message CreateContactRequest {
                  message EmailAddress {
                    enum Type {
                      TYPE_UNSPECIFIED = 0;
                      HOME = 1;
                      WORK = 2;
                    }

                    optional string email = 1;
                    repeated EmailType type = 2;
                  }

                  string full_name = 1;
                  repeated EmailAddress email_addresses = 2;
                }

            In this example, in proto `field` could take one of the following values:

            * `full_name` for a violation in the `full_name` value
            * `email_addresses[1].email` for a violation in the `email` field of the
              first `email_addresses` message
            * `email_addresses[3].type[2]` for a violation in the second `type`
              value in the third `email_addresses` message.

            In JSON, the same values are represented as:

            * `fullName` for a violation in the `fullName` value
            * `emailAddresses[1].email` for a violation in the `email` field of the
              first `emailAddresses` message
            * `emailAddresses[3].type[2]` for a violation in the second `type`
              value in the third `emailAddresses` message.
          type: string
      type: object
    GetConnectClusterResponse:
      properties:
        cluster:
          $ref: '#/components/schemas/ConnectCluster'
      type: object
    GetConnectorConfigResponse:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
      type: object
    GetConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
        errors:
          items:
            $ref: '#/components/schemas/ConnectorError'
          type: array
        holistic_state:
          $ref: '#/components/schemas/ConnectorHolisticState'
      type: object
    GetTopicConfigurationsResponse:
      properties:
        configurations:
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    GetTransformResponse:
      properties:
        transform:
          $ref: '#/components/schemas/TransformMetadata'
      type: object
    Help:
      description: |-
        Provides links to documentation or for performing an out of band action.

        For example, if a quota check failed with an error indicating the calling
        project hasn't enabled the accessed service, this can contain a URL pointing
        directly to the right place in the developer console to flip the bit.
      properties:
        links:
          description: URL(s) pointing to additional information on handling the current error.
          items:
            $ref: '#/components/schemas/Link'
          type: array
      title: Help
      type: object
    Link:
      description: Describes a URL link.
      properties:
        description:
          description: Describes what the link offers.
          type: string
        url:
          description: The URL of the link.
          type: string
      type: object
    ListACLsRequest.Filter:
      properties:
        host:
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          nullable: true
          type: string
        resource_name:
          nullable: true
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    ListACLsResponse:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
      type: object
    ListConnectClustersResponse:
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/ConnectCluster'
          type: array
      type: object
    ListConnectorTopicsResponse:
      properties:
        topics:
          items:
            type: string
          type: array
      type: object
    ListConnectorsResponse:
      properties:
        connectors:
          items:
            $ref: '#/components/schemas/ConnectorInfoStatus'
          title: connectors is the list of connectors the key is the connector name
          type: array
        next_page_token:
          description: Page Token to fetch the next page. The value can be used as page_token in the next call to this endpoint.
          type: string
      type: object
    ListSecretsRequest.Filter:
      properties:
        labels[string]:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
      title: Defines the filter for Secrets
      type: object
    ListSecretsResponse:
      properties:
        next_page_token:
          description: token to retrieve the next page.
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/Secret'
          type: array
      title: ListSecretsResponse is the response of ListSecrets
      type: object
    ListTopicsRequest.Filter:
      properties:
        name:
          type: string
      type: object
    ListTopicsResponse:
      properties:
        next_page_token:
          type: string
        topics:
          items:
            $ref: '#/components/schemas/v1alpha1.Topic'
          type: array
      type: object
    ListTransformsRequest.Filter:
      properties:
        name:
          type: string
      type: object
    ListTransformsResponse:
      properties:
        next_page_token:
          type: string
        transforms:
          items:
            $ref: '#/components/schemas/TransformMetadata'
          type: array
      type: object
    ListUsersResponse:
      properties:
        users:
          items:
            $ref: '#/components/schemas/ListUsersResponse.User'
          type: array
      type: object
    ListUsersResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
      type: object
    MatchingACL:
      properties:
        error:
          $ref: '#/components/schemas/Status'
        host:
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          type: string
        resource_name:
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    Options:
      properties:
        include_tasks:
          type: boolean
        only_failed:
          type: boolean
      type: object
    PartitionStatus:
      enum:
        - PARTITION_STATUS_RUNNING
        - PARTITION_STATUS_INACTIVE
        - PARTITION_STATUS_ERRORED
        - PARTITION_STATUS_UNKNOWN
      type: string
    PartitionTransformStatus:
      properties:
        lag:
          format: int32
          type: integer
        node_id:
          format: int32
          type: integer
        partition:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/PartitionStatus'
      type: object
    PermissionType:
      enum:
        - PERMISSION_TYPE_ANY
        - PERMISSION_TYPE_DENY
        - PERMISSION_TYPE_ALLOW
      type: string
    Policy:
      properties:
        host:
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          type: string
      type: object
    QuotaFailure:
      description: |-
        Describes how a quota check failed.

        For example if a daily limit was exceeded for the calling project,
        a service could respond with a QuotaFailure detail containing the project
        id and the description of the quota limit that was exceeded.  If the
        calling project hasn't enabled the service in the developer console, then
        a service could respond with the project id and set `service_disabled`
        to true.

        Also see RetryInfo and Help types for other details about handling a
        quota failure.
      properties:
        violations:
          description: Describes all quota violations.
          items:
            $ref: '#/components/schemas/QuotaFailure.Violation'
          type: array
      title: QuotaFailure
      type: object
    QuotaFailure.Violation:
      description: |-
        A message type used to describe a single quota violation.  For example, a
        daily quota or a custom quota that was exceeded.
      properties:
        description:
          description: |-
            A description of how the quota check failed. Clients can use this
            description to find more about the quota configuration in the service's
            public documentation, or find the relevant quota limit to adjust through
            developer console.

            For example: "Service disabled" or "Daily Limit for read operations
            exceeded".
          type: string
        subject:
          description: |-
            The subject on which the quota check failed.
            For example, "clientip:<ip address of client>" or "project:<Google
            developer project id>".
          type: string
      type: object
    ReplicaAssignment:
      properties:
        partition:
          description: Partition is a partition to create.
          format: int32
          type: integer
        replicas:
          description: Replicas are broker IDs the partition must exist on.
          items:
            format: int32
            type: integer
          type: array
      type: object
    Resource:
      properties:
        acls:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
        resource_name:
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    ResourcePatternType:
      enum:
        - RESOURCE_PATTERN_TYPE_ANY
        - RESOURCE_PATTERN_TYPE_MATCH
        - RESOURCE_PATTERN_TYPE_LITERAL
        - RESOURCE_PATTERN_TYPE_PREFIXED
      type: string
    ResourceType:
      enum:
        - RESOURCE_TYPE_ANY
        - RESOURCE_TYPE_TOPIC
        - RESOURCE_TYPE_GROUP
        - RESOURCE_TYPE_CLUSTER
        - RESOURCE_TYPE_TRANSACTIONAL_ID
        - RESOURCE_TYPE_DELEGATION_TOKEN
        - RESOURCE_TYPE_USER
      type: string
    SASLMechanism:
      enum:
        - SASL_MECHANISM_SCRAM_SHA_256
        - SASL_MECHANISM_SCRAM_SHA_512
      type: string
    Secret:
      properties:
        id:
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
      title: Secret defienes the secret resource
      type: object
    SecretInput:
      properties:
        id:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        secret_data:
          format: byte
          type: string
      required:
        - secret_data
      type: object
    SetConfiguration:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    SetTopicConfigurationResponse:
      properties:
        configuration:
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    Status:
      description: |-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It is
        used by [gRPC](https://github.com/grpc). Each `Status` message contains
        three pieces of data: error code, error message, and error details.

        You can find out more about this error model and how to work with it in the
        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: RPC status code, as described [here](https://github.com/googleapis/googleapis/blob/b4c238feaa1097c53798ed77035bbfeb7fc72e96/google/rpc/code.proto#L32).
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          format: int32
          type: string
        details:
          items:
            description: Details of the error.
            oneOf:
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.BadRequest
                        type: string
                  - $ref: '#/components/schemas/BadRequest'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.ErrorInfo
                        type: string
                  - $ref: '#/components/schemas/ErrorInfo'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.QuotaFailure
                        type: string
                  - $ref: '#/components/schemas/QuotaFailure'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.Help
                        type: string
                  - $ref: '#/components/schemas/Help'
          type: array
        message:
          description: Detailed error message. No compatibility guarantees are given for the text contained in this message.
          type: string
      type: object
    TaskInfo:
      properties:
        connector:
          type: string
        task:
          format: int32
          type: integer
      type: object
    TaskStatus:
      properties:
        id:
          format: int32
          type: integer
        state:
          type: string
        trace:
          type: string
        worker_id:
          type: string
      type: object
    TransformMetadata:
      properties:
        input_topic:
          type: string
        name:
          type: string
        output_topics:
          items:
            type: string
          type: array
        status:
          items:
            $ref: '#/components/schemas/PartitionTransformStatus'
          type: array
      type: object
    UpdateConfiguration:
      properties:
        key:
          type: string
        operation:
          $ref: '#/components/schemas/UpdateConfiguration.Operation'
        value:
          type: string
      type: object
    UpdateConfiguration.Operation:
      enum:
        - OPERATION_SET
        - OPERATION_DELETE
        - OPERATION_APPEND
        - OPERATION_SUBTRACT
      type: string
    UpdateSecretResponse:
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      title: UpdateSecretResponse is the response of UpdateSecret
      type: object
    UpdateTopicConfigurationResponse:
      properties:
        configuration:
          description: Topic's complete set of configurations after this partial patch has been applied.
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    UpdateUserRequest.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
        password:
          type: string
      type: object
    UpdateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/UpdateUserResponse.User'
      type: object
    UpdateUserResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
      type: object
    UpsertConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    v1alpha1.Topic:
      properties:
        configuration:
          description: |-
            configurations is omitted in ListTopics.

            redpanda.api.common.v1alpha1.ErrorStatus x = 7;
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
        is_internal:
          type: boolean
        name:
          type: string
        partition_count:
          format: int32
          type: integer
        replication_factor:
          format: int32
          type: integer
      type: object
  securitySchemes:
    auth0:
      description: RedpandaCloud
      flows:
        implicit:
          authorizationUrl: https://prod-cloudv2.us.auth0.com/oauth/authorize
          scopes: {}
          x-client-id: dQjapNIAHhF7EQqQToRla3yEII9sUSap
      type: oauth2
info:
  description: Welcome to Redpanda Cloud's Dataplane API documentation.
  title: Redpanda Cloud
  version: v1alpha1
openapi: 3.0.3
paths:
  /v1alpha1/acls:
    delete:
      description: Delete all ACLs that match the given filter
      operationId: ACLService_DeleteACLs
      parameters:
        - in: query
          name: filter.resource_type
          required: true
          schema:
            enum:
              - RESOURCE_TYPE_ANY
              - RESOURCE_TYPE_TOPIC
              - RESOURCE_TYPE_GROUP
              - RESOURCE_TYPE_CLUSTER
              - RESOURCE_TYPE_TRANSACTIONAL_ID
              - RESOURCE_TYPE_DELEGATION_TOKEN
              - RESOURCE_TYPE_USER
            type: string
        - in: query
          name: filter.resource_name
          schema:
            type: string
        - in: query
          name: filter.resource_pattern_type
          required: true
          schema:
            enum:
              - RESOURCE_PATTERN_TYPE_ANY
              - RESOURCE_PATTERN_TYPE_MATCH
              - RESOURCE_PATTERN_TYPE_LITERAL
              - RESOURCE_PATTERN_TYPE_PREFIXED
            type: string
        - in: query
          name: filter.principal
          schema:
            type: string
        - in: query
          name: filter.host
          schema:
            type: string
        - in: query
          name: filter.operation
          required: true
          schema:
            enum:
              - OPERATION_ANY
              - OPERATION_ALL
              - OPERATION_READ
              - OPERATION_WRITE
              - OPERATION_CREATE
              - OPERATION_DELETE
              - OPERATION_ALTER
              - OPERATION_DESCRIBE
              - OPERATION_CLUSTER_ACTION
              - OPERATION_DESCRIBE_CONFIGS
              - OPERATION_ALTER_CONFIGS
              - OPERATION_IDEMPOTENT_WRITE
              - OPERATION_CREATE_TOKENS
              - OPERATION_DESCRIBE_TOKENS
            type: string
        - in: query
          name: filter.permission_type
          required: true
          schema:
            enum:
              - PERMISSION_TYPE_ANY
              - PERMISSION_TYPE_DENY
              - PERMISSION_TYPE_ALLOW
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteACLsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete ACLs
      tags:
        - ACLService
    get:
      description: List ACLs
      operationId: ACLService_ListACLs
      parameters:
        - in: query
          name: filter.resource_type
          schema:
            enum:
              - RESOURCE_TYPE_ANY
              - RESOURCE_TYPE_TOPIC
              - RESOURCE_TYPE_GROUP
              - RESOURCE_TYPE_CLUSTER
              - RESOURCE_TYPE_TRANSACTIONAL_ID
              - RESOURCE_TYPE_DELEGATION_TOKEN
              - RESOURCE_TYPE_USER
            type: string
        - in: query
          name: filter.resource_name
          schema:
            type: string
        - in: query
          name: filter.resource_pattern_type
          schema:
            enum:
              - RESOURCE_PATTERN_TYPE_ANY
              - RESOURCE_PATTERN_TYPE_MATCH
              - RESOURCE_PATTERN_TYPE_LITERAL
              - RESOURCE_PATTERN_TYPE_PREFIXED
            type: string
        - in: query
          name: filter.principal
          schema:
            type: string
        - in: query
          name: filter.host
          schema:
            type: string
        - in: query
          name: filter.operation
          schema:
            enum:
              - OPERATION_ANY
              - OPERATION_ALL
              - OPERATION_READ
              - OPERATION_WRITE
              - OPERATION_CREATE
              - OPERATION_DELETE
              - OPERATION_ALTER
              - OPERATION_DESCRIBE
              - OPERATION_CLUSTER_ACTION
              - OPERATION_DESCRIBE_CONFIGS
              - OPERATION_ALTER_CONFIGS
              - OPERATION_IDEMPOTENT_WRITE
              - OPERATION_CREATE_TOKENS
              - OPERATION_DESCRIBE_TOKENS
            type: string
        - in: query
          name: filter.permission_type
          schema:
            enum:
              - PERMISSION_TYPE_ANY
              - PERMISSION_TYPE_DENY
              - PERMISSION_TYPE_ALLOW
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListACLsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List ACLs
      tags:
        - ACLService
    post:
      description: Create ACL
      operationId: ACLService_CreateACL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLRequest'
        required: true
        x-originalParamName: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateACLResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create ACL
      tags:
        - ACLService
  /v1alpha1/kafka-connect/clusters:
    get:
      description: List connect clusters available for being consumed by the console's kafka-connect service.
      operationId: KafkaConnectService_ListConnectClusters
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connect clusters
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}:
    get:
      description: Get information about an available kafka connect cluster, use the cluster_name defined in console's configuration file.
      operationId: KafkaConnectService_GetConnectCluster
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connect cluster
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors:
    get:
      description: List connectors managed by the kafka-connect service, use the cluster_name defined in the configuration file.
      operationId: KafkaConnectService_ListConnectors
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connectors
      tags:
        - KafkaConnectService
    post:
      description: Attempt to create a connector with the specific configuration.
      operationId: KafkaConnectService_CreateConnector
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorSpec'
        required: true
        x-originalParamName: connector
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create connector
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors/{name}:
    delete:
      description: Delete a connector forcefully stoping all tasks and deleting its configuration.
      operationId: KafkaConnectService_DeleteConnector
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete connector
      tags:
        - KafkaConnectService
    get:
      description: Get information about a connector in a specific cluster.
      operationId: KafkaConnectService_GetConnector
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connector
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors/{name}/config:
    get:
      description: Get the configuration for the connector.
      operationId: KafkaConnectService_GetConnectorConfig
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get connector configuration
      tags:
        - KafkaConnectService
    put:
      description: Create a new connector using the given configuration, or update the configuration for an existing connector. Returns information about the connector after the change has been made.
      operationId: KafkaConnectService_UpsertConnector
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              required:
                - config
              type: object
        required: true
        x-originalParamName: config
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Upsert connector configuration
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors/{name}/pause:
    put:
      description: Pause the connector and its tasks, which stops message processing until the connector is resumed. This call asynchronous.
      operationId: KafkaConnectService_PauseConnector
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Pause connector
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors/{name}/restart:
    post:
      description: Restarts a connector, triggers a connector restart, you can specify the only_failed or/and the include_tasks options.
      operationId: KafkaConnectService_RestartConnector
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Options'
        required: true
        x-originalParamName: options
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Restart connector
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors/{name}/resume:
    put:
      description: Resume a paused connector and its tasks, resumes message processing after the connector has been paused. It won't do nothing if the connector is not paused.
      operationId: KafkaConnectService_ResumeConnector
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Resume connector
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors/{name}/stop:
    put:
      description: Stops a connector, it stops the connector but does not delete the connector. All tasks for the connector are shut down completely.
      operationId: KafkaConnectService_StopConnector
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Stop connector
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors/{name}/topics:
    get:
      description: Returns a list of connector topic names, it will return an empty list if the connector is not running.
      operationId: KafkaConnectService_ListConnectorTopics
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List connector topics
      tags:
        - KafkaConnectService
  /v1alpha1/kafka-connect/clusters/{cluster_name}/connectors/{name}/topics/reset:
    put:
      description: Resets the set of topic names that the connector has been using.
      operationId: KafkaConnectService_ResetConnectorTopics
      parameters:
        - in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Reset connector topics
      tags:
        - KafkaConnectService
  /v1alpha1/secret/{secret.id}:
    put:
      description: Update a Secret content.
      operationId: SecretService_UpdateSecret
      parameters:
        - in: path
          name: secret.id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                labels:
                  additionalProperties:
                    type: string
                  type: object
                secret_data:
                  format: byte
                  type: string
              required:
                - secret_data
              type: object
        required: true
        x-originalParamName: secret
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update Secret
      tags:
        - SecretService
  /v1alpha1/secrets:
    get:
      description: List Secrets
      operationId: SecretService_ListSecrets
      parameters:
        - in: query
          name: filter.name
          schema:
            type: string
        - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          name: filter.labels[string]
          schema:
            type: string
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecretsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Secrets
      tags:
        - SecretService
    post:
      description: Create a Secret.
      operationId: SecretService_CreateSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretInput'
        required: true
        x-originalParamName: secret
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Secret Created.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create Secret
      tags:
        - SecretService
  /v1alpha1/secrets/{id}:
    delete:
      description: Delete a Secret.
      operationId: SecretService_DeleteSecret
      parameters:
        - description: The id of the secret you want to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Secret was deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Secret
      tags:
        - SecretService
  /v1alpha1/topics:
    get:
      description: List Topics
      operationId: TopicService_ListTopics
      parameters:
        - in: query
          name: filter.name
          schema:
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Topics
      tags:
        - TopicService
    post:
      description: Create a Topic.
      operationId: TopicService_CreateTopic
      parameters:
        - description: |-
            ValidateOnly makes this request a dry-run; everything is validated but
            no topics are actually created.
          in: query
          name: validate_only
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicRequest.Topic'
        description: Topic is the topic to attempt to create.
        required: true
        x-originalParamName: topic
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1alpha1.Topic'
          description: Topic Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create Topic
      tags:
        - TopicService
  /v1alpha1/topics/{name}:
    delete:
      description: Deletes the Kafka topic with the requested name.
      operationId: TopicService_DeleteTopic
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Topic was deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: The requested topic does not exist
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete a Kafka topic
      tags:
        - TopicService
  /v1alpha1/topics/{topic_name}/configuration:
    patch:
      description: Updates a subset of the topic configuration.
      operationId: TopicService_UpdateTopicConfiguration
      parameters:
        - in: path
          name: topic_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateConfiguration'
              type: array
        required: true
        x-originalParamName: configuration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTopicConfigurationResponse'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update Topic Configuration
      tags:
        - TopicService
    put:
      description: Set the entire configuration of a topic. Config entries not provided in the request are removed.
      operationId: TopicService_SetTopicConfiguration
      parameters:
        - in: path
          name: topic_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SetConfiguration'
              type: array
        required: true
        x-originalParamName: configuration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTopicConfigurationResponse'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Set Topic Configuration
      tags:
        - TopicService
  /v1alpha1/topics/{topic_name}/configurations:
    get:
      description: Get Topic Configurations.
      operationId: TopicService_GetTopicConfigurations
      parameters:
        - in: path
          name: topic_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopicConfigurationsResponse'
          description: Ok
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get Topic Configurations
      tags:
        - TopicService
  /v1alpha1/transforms:
    get:
      description: Retrieve a list of transforms with optional filtering
      operationId: TransformService_ListTransforms
      parameters:
        - in: query
          name: filter.name
          schema:
            type: string
        - in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransformsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Transforms
      tags:
        - TransformService
  /v1alpha1/transforms/{name}:
    delete:
      description: Delete a WASM transform with the requested name.
      operationId: TransformService_DeleteTransform
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Transform deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Transform
      tags:
        - TransformService
    get:
      description: Get Transform!
      operationId: TransformService_GetTransform
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransformResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Get Transform
      tags:
        - TransformService
    put:
      description: Deploy or update a transform configuration.
      operationId: TransformService_DeployTransform
      parameters:
        - description: |-
            'name' is the unique identifier for the transform. It must be a non-empty string,
            with a maximum length of 128 bytes. It should contain only characters that are
            valid UTF-8 and not control or format characters.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: WASM binary for the transform. The binary must be a valid WASM binary
          in: query
          name: wasm_binary
          schema:
            format: byte
            type: string
        - description: '''input_topic'' specifies the name of the input topic for the transform.'
          in: query
          name: input_topic
          schema:
            type: string
        - description: |-
            'output_topics' is a list of output topics for the transform. This field can contain
            multiple strings, each representing the name of an output topic.
          in: query
          name: output_topics
          schema:
            items:
              type: string
            type: array
        - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          name: environment[string]
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformMetadata'
          description: Transform deployed or updated successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Deploy Transform
      tags:
        - TransformService
  /v1alpha1/users:
    get:
      description: List Users
      operationId: UserService_ListUsers
      parameters:
        - in: query
          name: name
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                users:
                  - name: payment-service
                  - name: jane
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: List Users
      tags:
        - UserService
    post:
      description: Create a User.
      operationId: UserService_CreateUser
      requestBody:
        content:
          application/json:
            example:
              user:
                mechanism: SASL_MECHANISM_SCRAM_SHA_256
                name: payment-service
                password: secure-password
            schema:
              $ref: '#/components/schemas/CreateUserRequest.User'
        required: true
        x-originalParamName: user
      responses:
        "201":
          content:
            application/json:
              example:
                user:
                  mechanism: SASL_MECHANISM_SCRAM_SHA_256
                  name: payment-service
              schema:
                $ref: '#/components/schemas/CreateUserRequest.User'
          description: Creates a user
        "400":
          content:
            application/json:
              example:
                code: INVALID_ARGUMENT
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_INVALID_INPUT
                  - '@type': type.googleapis.com/google.rpc.BadRequest
                    field_violations:
                      - description: value length must be at least 3 characters
                        field: user.password
                      - description: value is required
                        field: user.mechanism
                message: provided parameters are invalid
              schema:
                $ref: '#/components/schemas/Status'
          description: Bad Request. Check API documentation and update request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Create User
      tags:
        - UserService
  /v1alpha1/users/{name}:
    delete:
      description: Delete Users
      operationId: UserService_DeleteUser
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              example: {}
              schema: {}
          description: User was deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              example:
                code: NOT_FOUND
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_RESOURCE_NOT_FOUND
                message: user not found
              schema:
                $ref: '#/components/schemas/Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Delete Users
      tags:
        - UserService
  /v1alpha1/users/{user.name}:
    put:
      description: Update a User.
      operationId: UserService_UpdateUser
      parameters:
        - in: path
          name: user.name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              user:
                mechanism: SASL_MECHANISM_SCRAM_SHA_256
                password: new-password
            schema:
              properties:
                mechanism:
                  $ref: '#/components/schemas/SASLMechanism'
                password:
                  type: string
              type: object
        required: true
        x-originalParamName: user
      responses:
        "200":
          content:
            application/json:
              example:
                user:
                  mechanism: SASL_MECHANISM_SCRAM_SHA_256
                  name: payment-service
              schema:
                $ref: '#/components/schemas/UpdateUserResponse.User'
          description: Ok
        "400":
          content:
            application/json:
              example:
                code: INVALID_ARGUMENT
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_INVALID_INPUT
                  - '@type': type.googleapis.com/google.rpc.BadRequest
                    field_violations:
                      - description: value length must be at least 3 characters
                        field: user.password
                      - description: value is required
                        field: user.mechanism
                message: provided parameters are invalid
              schema:
                $ref: '#/components/schemas/Status'
          description: Bad Request. Check API documentation and update request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: An unexpected error response.
      summary: Update User
      tags:
        - UserService
security:
  - auth0: []
servers:
  - description: Dataplane API
    url: '{dataplane_api_url}'
    variables:
      dataplane_api_url:
        default: https://api-a4cb21.ck09ma3c4vs12cng3cig.fmc.prd.cloud.redpanda.com
        description: |-
          Dataplane API.<br>
          					The Dataplane API allows management of Topics,ACLs,Service accounts. It is exposed by each individual cluster.
          					Retrieve the Dataplane API URL of a cluster by using the dataplane_api.url field returned by the Get Cluster endpoint.<br><br>
          					Example (Dedicated): https://api-a4cb21.ck09mi9c4vs17hng9gig.fmc.prd.cloud.redpanda.com<br>
          					Example (BYOC): https://api-a4cb21.ck09mi9c4vs17hng9gig.byoc.prd.cloud.redpanda.com
tags:
  - name: ACLService
  - name: KafkaConnectService
  - name: SecretService
  - name: TopicService
  - name: TransformService
  - name: UserService
